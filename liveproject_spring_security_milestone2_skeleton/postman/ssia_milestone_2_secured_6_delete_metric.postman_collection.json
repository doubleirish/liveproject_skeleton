{
	"info": {
		"_postman_id": "ddae84bb-9e6c-45e8-b01f-9d42c24f32c3",
		"name": "ssia_milestone_2_secured_6_delete_metric",
		"description": "Endpoint that the client can call to delete a specific health profile by providing the username as an input (DELETE /profile/{username}).\n*   **Security requirement:** \n- Only an admin can call the DELETE /profile/username endpoint. \n- An admin user is a user having authority “admin”.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "m2.6 access-token-password-grant john",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ff0ea57a-4841-4b24-b63f-d5b02deb3ddb",
						"exec": [
							"",
							"pm.test(\"Expecting Status code of 200, was \"+ pm.response.code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"save tokens\", function () {",
							"    var jsonData = pm.response.json();",
							"    console.log(\"Saving access token in response to 'token' environmental variable: \" + jsonData.access_token)",
							"    pm.environment.set(\"access_token\", jsonData.access_token);",
							"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "secret",
							"type": "string"
						},
						{
							"key": "username",
							"value": "client",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/oauth/token?grant_type=password&username=john&password=12345&scope=read",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"oauth",
						"token"
					],
					"query": [
						{
							"key": "grant_type",
							"value": "password"
						},
						{
							"key": "username",
							"value": "john"
						},
						{
							"key": "password",
							"value": "12345"
						},
						{
							"key": "scope",
							"value": "read"
						}
					]
				},
				"description": "The client requests an authorization token on behalf of a user "
			},
			"response": []
		},
		{
			"name": "m2.6 /metric - delete  jane metric with john token -> fail",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db0d911e-4b53-4c86-bd15-8ed0f38ddfe1",
						"exec": [
							"",
							"pm.test(\"Expecting Status code of 403, was \"+ pm.response.code, function () {",
							"    pm.response.to.have.status(403);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "68674361-104b-4568-b5f4-210d726c7643",
						"exec": [
							" "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \n  \"username\": \"alice\"\n}"
				},
				"url": {
					"raw": "localhost:7070/metric/jane",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"metric",
						"jane"
					]
				}
			},
			"response": []
		},
		{
			"name": "m2.6 /metric - delete  john metric  with john token -> fail",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5997eb20-999b-4d05-8416-eee3c79dbe64",
						"exec": [
							"",
							"pm.test(\"Expecting Status code of 403, was \"+ pm.response.code, function () {",
							"    pm.response.to.have.status(403);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "fb9ec387-b22f-4cc8-b240-82ca5a7b7eae",
						"exec": [
							" "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \n  \"username\": \"alice\"\n}"
				},
				"url": {
					"raw": "localhost:7070/metric/john",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"metric",
						"john"
					]
				}
			},
			"response": []
		},
		{
			"name": "m2.6 access-token-password-grant admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "46740656-192d-408d-b915-029435a8dcd5",
						"exec": [
							"",
							"pm.test(\"Expecting Status code of 200, was \"+ pm.response.code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"save tokens\", function () {",
							"    var jsonData = pm.response.json();",
							"    console.log(\"Saving access token in response to 'token' environmental variable: \" + jsonData.access_token)",
							"    pm.environment.set(\"access_token\", jsonData.access_token);",
							"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "secret",
							"type": "string"
						},
						{
							"key": "username",
							"value": "client",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/oauth/token?grant_type=password&username=admin&password=secret2&scope=read",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"oauth",
						"token"
					],
					"query": [
						{
							"key": "grant_type",
							"value": "password"
						},
						{
							"key": "username",
							"value": "admin"
						},
						{
							"key": "password",
							"value": "secret2"
						},
						{
							"key": "scope",
							"value": "read"
						}
					]
				},
				"description": "The client requests an authorization token on behalf of a user "
			},
			"response": []
		},
		{
			"name": "m2.6 /metric - delete  deleteme2 metric with admin token -> success",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c65fb3b7-7047-4fca-b5cf-434395294417",
						"exec": [
							"",
							"pm.test(\"Expecting Status code of 200, was \"+ pm.response.code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "d3ddeb54-abc5-4474-afe1-2d8a0e7051d5",
						"exec": [
							" "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:7070/metric/deleteme2",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"metric",
						"deleteme2"
					]
				}
			},
			"response": []
		},
		{
			"name": "m2.6 access-token-password-grant deleteme2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "588ef132-ffc4-457c-a887-33acda9e7933",
						"exec": [
							"",
							"pm.test(\"Expecting Status code of 200, was \"+ pm.response.code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"save tokens\", function () {",
							"    var jsonData = pm.response.json();",
							"    console.log(\"Saving access token in response to 'token' environmental variable: \" + jsonData.access_token)",
							"    pm.environment.set(\"access_token\", jsonData.access_token);",
							"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "secret",
							"type": "string"
						},
						{
							"key": "username",
							"value": "client",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/oauth/token?grant_type=password&username=deleteme2&password=swordfish&scope=read",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"oauth",
						"token"
					],
					"query": [
						{
							"key": "grant_type",
							"value": "password"
						},
						{
							"key": "username",
							"value": "deleteme2"
						},
						{
							"key": "password",
							"value": "swordfish"
						},
						{
							"key": "scope",
							"value": "read"
						}
					]
				},
				"description": "The client requests an authorization token on behalf of a user "
			},
			"response": []
		},
		{
			"name": "m2.6 /metric - verify  deleteme2 metric's  have been removed",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "219ce953-5f68-4b53-b8f3-8d12d193d991",
						"exec": [
							"",
							"pm.test(\"Expecting Status code of 200, was \"+ pm.response.code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Body contains empty json array indicating no metrics\",() => {",
							"  pm.expect(pm.response.text()).equals(\"[]\");",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "5c00a73a-edd6-435a-a38a-e6874a70c7cc",
						"exec": [
							" "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:7070/metric/deleteme2",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"metric",
						"deleteme2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "825ef4ff-865f-4d0d-b6d7-4ef70a8e39e5",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "90f8bd8f-1639-444a-9106-2e6393a6e371",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}