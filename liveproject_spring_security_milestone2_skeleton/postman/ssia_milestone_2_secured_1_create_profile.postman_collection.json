{
	"info": {
		"_postman_id": "abce46c0-eac6-4445-a00c-cfa7e3b3efb2",
		"name": "ssia_milestone_2_secured_1_create_profile",
		"description": " Only the authenticated user can add a profile for themselves.\n  Validate that another user cannot add a profile for a different username than its own. \n  An user can be authenticated only if he previously registered in the system with a username and a password.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "m2.1 access-token-password-grant john",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b2f327ac-17cb-4a4e-acdc-37d876d0e825",
						"exec": [
							"",
							"pm.test(\"Expecting Status code of 200, was \"+ pm.response.code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"save tokens\", function () {",
							"    var jsonData = pm.response.json();",
							"    console.log(\"Saving access token in response to 'token' environmental variable: \" + jsonData.access_token)",
							"    pm.environment.set(\"access_token\", jsonData.access_token);",
							"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "secret",
							"type": "string"
						},
						{
							"key": "username",
							"value": "client",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/oauth/token?grant_type=password&username=john&password=12345&scope=read",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"oauth",
						"token"
					],
					"query": [
						{
							"key": "grant_type",
							"value": "password"
						},
						{
							"key": "username",
							"value": "john"
						},
						{
							"key": "password",
							"value": "12345"
						},
						{
							"key": "scope",
							"value": "read"
						}
					]
				},
				"description": "The client requests an authorization token on behalf of a user "
			},
			"response": []
		},
		{
			"name": "m2.1 /profile/john (with john access_token) ->success",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "81000b09-219f-4f92-9419-eea707180351",
						"exec": [
							"",
							"pm.test(\"Expecting Status code of 200, was \"+ pm.response.code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							" ",
							"",
							"pm.test(\"Body contains string\",() => {",
							"  pm.expect(pm.response.text()).to.include(\"john\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:7070/profile/john",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"profile",
						"john"
					]
				}
			},
			"response": []
		},
		{
			"name": "m2.1 access-token-password-grant alice",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6942d7ae-3385-414f-9b51-799fbfea3b04",
						"exec": [
							"",
							"pm.test(\"Expecting Status code of 200, was \"+ pm.response.code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"save tokens\", function () {",
							"    var jsonData = pm.response.json();",
							"    console.log(\"Saving access token in response to 'token' environmental variable: \" + jsonData.access_token)",
							"    pm.environment.set(\"access_token\", jsonData.access_token);",
							"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "secret",
							"type": "string"
						},
						{
							"key": "username",
							"value": "client",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/oauth/token?grant_type=password&username=alice&password=swordfish&scope=read",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"oauth",
						"token"
					],
					"query": [
						{
							"key": "grant_type",
							"value": "password"
						},
						{
							"key": "username",
							"value": "alice"
						},
						{
							"key": "password",
							"value": "swordfish"
						},
						{
							"key": "scope",
							"value": "read"
						}
					]
				},
				"description": "The client requests an authorization token on behalf of a user "
			},
			"response": []
		},
		{
			"name": "m2.1 /profile - add  alice profile with alice token -> success",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "de43277d-45a1-4c34-886d-f33bf04287da",
						"exec": [
							"",
							"pm.test(\"Expecting Status code of 200, was \"+ pm.response.code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f94a97d0-aed1-4a45-b721-afdb8eea2023",
						"exec": [
							" "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \n  \"username\": \"alice\"\n}"
				},
				"url": {
					"raw": "localhost:7070/profile",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"profile"
					]
				}
			},
			"response": []
		},
		{
			"name": "m2.1 /profile - add  bob profile with alice token ->fail auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f16d2cb6-6206-4b45-a821-a5815df59e70",
						"exec": [
							"",
							"pm.test(\"Expecting Status code of unauthorized or forbidden, was \"+ pm.response.code, function () {",
							"    pm.response.to.not.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "5c3aaa0d-d1e1-4b74-880c-cabeb34f4b9f",
						"exec": [
							" "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{  \n  \"username\": \"bob\"\n}"
				},
				"url": {
					"raw": "localhost:7070/profile",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"profile"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "1e85d114-b3b5-4be1-bfa3-9ed4678a9f9b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "63b53b7e-f6c5-4371-8342-194640c3169c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}