{
	"info": {
		"_postman_id": "62ae1eaf-2337-4d41-a32b-b8decacab7aa",
		"name": "ssia_milestone_2_secured_2_find_profile",
		"description": "Endpoint used to get details about a health profile by providing the username as an input value (GET /profile/{username}):\n*   **Security requirement:** \n- A user can get the details of their own health profile. \n- An admin can get the details of any profile. \n- A non-admin user cannot get details of other users’ profiles. \n- An admin user is a user having authority “admin”.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "m2.2 access-token-password-grant jane",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fe57085f-a029-4eda-bfb4-cc0bbf5bbe0d",
						"exec": [
							"",
							"pm.test(\"Expecting Status code of 200, was \"+ pm.response.code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"save tokens\", function () {",
							"    var jsonData = pm.response.json();",
							"    console.log(\"Saving access token in response to 'token' environmental variable: \" + jsonData.access_token)",
							"    pm.environment.set(\"access_token\", jsonData.access_token);",
							"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "secret",
							"type": "string"
						},
						{
							"key": "username",
							"value": "client",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/oauth/token?grant_type=password&username=jane&password=swordfish&scope=read",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"oauth",
						"token"
					],
					"query": [
						{
							"key": "grant_type",
							"value": "password"
						},
						{
							"key": "username",
							"value": "jane"
						},
						{
							"key": "password",
							"value": "swordfish"
						},
						{
							"key": "scope",
							"value": "read"
						}
					]
				},
				"description": "The client requests an authorization token on behalf of a user "
			},
			"response": []
		},
		{
			"name": "m2.2 /profile/jane (with jane token) ->success",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b6610316-fcb5-46b5-8049-0e0990ff5644",
						"exec": [
							"",
							"pm.test(\"Expecting Status code of 200, was \"+ pm.response.code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							" ",
							"",
							"pm.test(\"Body contains string\",() => {",
							"  pm.expect(pm.response.text()).to.include(\"jane\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:7070/profile/jane",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"profile",
						"jane"
					]
				}
			},
			"response": []
		},
		{
			"name": "m2.2 /profile/john (with jane token) ->fail auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e75a065f-5ad5-4fb3-aeb6-c508d76aebfb",
						"exec": [
							"",
							"pm.test(\"Expecting Status code of 403, was \"+ pm.response.code, function () {",
							"    pm.response.to.have.status(403);",
							"});",
							" ",
							" "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:7070/profile/john",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"profile",
						"john"
					]
				}
			},
			"response": []
		},
		{
			"name": "m2.2 access-token-password-grant admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "82ff8703-b603-4e7e-9fbc-61797d9f9b38",
						"exec": [
							"",
							"pm.test(\"Expecting Status code of 200, was \"+ pm.response.code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"save tokens\", function () {",
							"    var jsonData = pm.response.json();",
							"    console.log(\"Saving access token in response to 'token' environmental variable: \" + jsonData.access_token)",
							"    pm.environment.set(\"access_token\", jsonData.access_token);",
							"    pm.environment.set(\"refresh_token\", jsonData.refresh_token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "secret",
							"type": "string"
						},
						{
							"key": "username",
							"value": "client",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:8080/oauth/token?grant_type=password&username=admin&password=secret2&scope=read",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"oauth",
						"token"
					],
					"query": [
						{
							"key": "grant_type",
							"value": "password"
						},
						{
							"key": "username",
							"value": "admin"
						},
						{
							"key": "password",
							"value": "secret2"
						},
						{
							"key": "scope",
							"value": "read"
						}
					]
				},
				"description": "The client requests an authorization token on behalf of a user "
			},
			"response": []
		},
		{
			"name": "m2.2 /profile/dave (with admin token) ->success",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c6723cd7-e173-4348-8954-1f6e5acf8afa",
						"exec": [
							"",
							"pm.test(\"Expecting Status code of 200, was \"+ pm.response.code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							" ",
							"",
							"pm.test(\"Body contains string\",() => {",
							"  pm.expect(pm.response.text()).to.include(\"dave\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:7070/profile/dave",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"profile",
						"dave"
					]
				}
			},
			"response": []
		},
		{
			"name": "m2.2 /profile/john (with admin token) ->success",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3076b2a7-6589-4a5d-891b-32c00bc64d6a",
						"exec": [
							"",
							"pm.test(\"Expecting Status code of 200, was \"+ pm.response.code, function () {",
							"    pm.response.to.have.status(200);",
							"});",
							" ",
							"",
							"pm.test(\"Body contains string\",() => {",
							"  pm.expect(pm.response.text()).to.include(\"john\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{access_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "localhost:7070/profile/john",
					"host": [
						"localhost"
					],
					"port": "7070",
					"path": [
						"profile",
						"john"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d2bfaf66-71a2-4d93-9faa-3309c879711c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "cb063407-fb39-4f7f-8f59-e907e5c76c0b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}